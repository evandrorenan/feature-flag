name: CI/CD Pipeline for feature-flag Microservice

on:
  push:
    branches: [ "main", "develop"]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Extract feature-flag-sdk-springboot version from pom.xml
        id: extract_sdk_version
        run: |
          VERSION=$(grep -A 1 '<artifactId>feature-flag-sdk-springboot</artifactId>' pom.xml | grep -o '<version>[^<]*' | sed 's/<version>//')
          echo "FEATURE_FLAG_SDK_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Feature flag SDK version: $VERSION"

      - name: Download JAR from GitHub Packages
        run: |
          curl -L "https://maven.pkg.github.com/evandrorenan/feature-flag-sdk-springboot/br/com/evandrorenan/feature-flag-sdk-springboot/${{ env.FEATURE_FLAG_SDK_VERSION }}/feature-flag-sdk-springboot-${{ env.FEATURE_FLAG_SDK_VERSION }}-jar-with-dependencies.jar" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -o "feature-flag-sdk-springboot-${{ env.FEATURE_FLAG_SDK_VERSION }}-jar-with-dependencies.jar"

      - name: Install JAR to Maven Local Repository
        run: |
          mvn install:install-file -Dfile=feature-flag-sdk-springboot-${{ env.FEATURE_FLAG_SDK_VERSION }}-jar-with-dependencies.jar \
            -DgroupId=br.com.evandrorenan \
            -DartifactId=feature-flag-sdk-springboot \
            -Dversion=${{ env.FEATURE_FLAG_SDK_VERSION }} \
            -Dpackaging=jar          

      - name: Build and compile with Maven
        run: mvn clean install -DskipTests=false

      - name: Run tests with JUnit
        run: mvn test

      - name: Extract feature-flag-sdk-springboot version from pom.xml
        id: extract_version
        run: |
          VERSION=$(grep -A 1 '<artifactId>feature-flag</artifactId>' pom.xml | grep -o '<version>[^<]*' | sed 's/<version>//')
          echo "FEATURE_FLAG_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Feature flag version: $VERSION"

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/feature-flag:${{ env.FEATURE_FLAG_VERSION }} .

      - name: Push Docker image to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/feature-flag:${{ env.FEATURE_FLAG_VERSION }}

      - name: Setup KUBECONFIG
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/feature-flag feature-flag=${{ secrets.DOCKER_USERNAME }}/feature-flag:${{ env.VERSION }} --record
        env:
          KUBECONFIG: $PWD/kubeconfig
